services:
  postgres:
    image: postgres:15-alpine
    container_name: story-library-db
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: password
      POSTGRES_DB: story_library
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - story-library-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: story-library-backend
    environment:
      NODE_ENV: development
      DATABASE_URL: postgresql://postgres:password@postgres:5432/story_library?schema=public
      REDIS_URL: redis://192.168.111.236:6379
      JWT_SECRET: development-jwt-secret-change-in-production
      JWT_REFRESH_SECRET: development-refresh-secret-change-in-production
      FRONTEND_URL: http://localhost:3000
    ports:
      - "3001:3001"
    depends_on:
      postgres:
        condition: service_healthy
    volumes:
      - ./backend:/app
      - /app/node_modules
      - /app/dist
    networks:
      - story-library-network
    command: npm start
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: story-library-frontend
    environment:
      NEXT_PUBLIC_API_URL: http://localhost:3001/api
      NEXT_PUBLIC_APP_URL: http://localhost:3000
      NEXTAUTH_URL: http://localhost:3000
      NEXTAUTH_SECRET: development-nextauth-secret-change-in-production
    ports:
      - "3000:3000"
    depends_on:
      - backend
    networks:
      - story-library-network
    restart: unless-stopped

volumes:
  postgres_data:
    driver: local

networks:
  story-library-network:
    driver: bridge